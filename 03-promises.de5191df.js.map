{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAuBC,SAASC,cAAc,SAEpDF,EAAqBG,iBAAiB,UAAUC,IAC9CA,EAAGC,iBAEH,MAAMC,EAAsBC,OAAOP,EAAqBQ,OAAOC,OACzDC,EAAyBH,OAAOP,EAAqBR,MAAMiB,OAC3DE,EAAoBJ,OAAOP,EAAqBY,KAAKH,OAE3D,IAAII,EAAc,EAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAqBQ,IAAK,CAC5C,IAAIC,EAAQL,EAEF,IAANI,IACFD,GAAeF,EACfI,GAASF,GAGXvB,EAAcwB,EAAI,EAAGC,GAClBC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAW,CAE/C4B,QAAS,KACTC,SAAU,WAEb,IAEFC,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOK,QACd,sBAAoBhC,QAAeC,MAAW,CAE5C4B,QAAS,KACTC,SAAU,WAEb,G,CAGPrB,EAAqBwB,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst promiseGeneratorForm = document.querySelector('.form');\n\npromiseGeneratorForm.addEventListener('submit', ev => {\n  ev.preventDefault();\n\n  const generatorFormAmount = Number(promiseGeneratorForm.amount.value);\n  const generatorFormFirstStep = Number(promiseGeneratorForm.delay.value);\n  const generatorFormStep = Number(promiseGeneratorForm.step.value);\n\n  let currentStep = 0;\n\n  for (let i = 0; i < generatorFormAmount; i++) {\n    let delay = generatorFormFirstStep;\n\n    if (i !== 0) {\n      currentStep += generatorFormStep;\n      delay += currentStep;\n    }\n\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 2500,\n            cssClass: 'success',\n          }\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 2500,\n            cssClass: 'failure',\n          }\n        );\n      });\n  }\n  promiseGeneratorForm.reset();\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$promiseGeneratorForm","document","querySelector","addEventListener","ev","preventDefault","generatorFormAmount","Number","amount","value","generatorFormFirstStep","generatorFormStep","step","currentStep","i","delay1","then","$parcel$interopDefault","Notify","success","timeout","cssClass","catch","failure","reset"],"version":3,"file":"03-promises.de5191df.js.map"}